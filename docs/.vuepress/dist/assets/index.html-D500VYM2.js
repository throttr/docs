import{_ as e,c as t,o as a}from"./app-BgH2enP9.js";const i={};function n(s,o){return a(),t("div")}const l=e(i,[["render",n]]),c=JSON.parse('{"path":"/","title":"Home","lang":"en-US","frontmatter":{"home":true,"title":"Home","heroImage":"/images/logo.png","actions":[{"text":"Get Started","link":"/get-started.html","type":"primary"}],"features":[{"title":"Sovereign real-time data & messaging engine","details":"Combines rate limiting, caching, and a robust pub/sub system to deliver instant, reliable services over channels, subscriptions, and live messaging."},{"title":"Fully asynchronous binary protocol with rich request types","details":"Supports 23+ optimized binary request types, from counter control to advanced management of connections, channels, metrics, and messages."},{"title":"Channel-based pub/sub architecture with fine-grained subscriptions","details":"Custom channels enable managing targeted message streams to dynamic groups, with efficient subscribe, unsubscribe, and publish operations."},{"title":"Comprehensive connection metadata and lifecycle tracking","details":"Each connection monitors bytes read, written, published messages, requests per type, and duration, facilitating diagnostics and optimization."},{"title":"Advanced metrics and statistics collection per key, channel, and connection","details":"Measures reads, writes, and activity in real time for each entity, enabling detailed analysis and granular reporting."},{"title":"Flexible TTL system with multiple time units and automatic expiration","details":"Adaptable TTLs from nanoseconds to hours, with dynamic rescheduling and instant cleanup to keep memory efficient."},{"title":"Adaptive dynamic field sizing for optimal bandwidth and memory use","details":"Uses uint8, uint16, uint32, or uint64 as needed for quota, TTL, sizes, and payloads, minimizing overhead."},{"title":"Binary key-value model supporting arbitrary binary blobs as keys and values","details":"Keys and values are strict-length binary fields with hashing, enabling efficient and safe raw data manipulation."},{"title":"Horizontally scalable with limits set by hardware and deployment design","details":"The system scales based on physical capacity and architecture, allowing deployments from single servers to complex production clusters."}],"footer":"AGPLv3 Licensed | Copyright Â© 2025-present Ian Torres"},"git":{"updatedTime":1748916765000,"contributors":[{"name":"Ian Torres","username":"","email":"iantorres@outlook.com","commits":3}],"changelog":[{"hash":"d86cf595e2b41de6378f42ec77e4181d5f5c3c9d","time":1748916765000,"email":"iantorres@outlook.com","author":"Ian Torres","message":"Docs updated."},{"hash":"bc45482333d4e5ba8bc711224ba6d802392bf3f4","time":1747596118000,"email":"iantorres@outlook.com","author":"Ian Torres","message":"Documentation updated."},{"hash":"4e7c9ffd44426fff5ffbb81849cc10207bbf3f96","time":1747161802000,"email":"iantorres@outlook.com","author":"Ian Torres","message":"Project initialized."}]},"filePathRelative":"index.md"}');export{l as comp,c as data};
